{"version":3,"file":"ng-can.js.map","sources":["ng://ng-can/lib/services/ng-can.service.ts","ng://ng-can/lib/directives/can.directive.ts","ng://ng-can/lib/ng-can.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { INgCanPermissions, INgCanPermissionsCheckable } from '../ng-can.typings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCanService implements INgCanPermissionsCheckable {\n  private _permissions: INgCanPermissions = {};\n\n  constructor() {\n  }\n\n  loadPermissions(permissions: { [key: string]: boolean }): void {\n    this._permissions = permissions;\n  }\n\n  checkConditions(conditions: INgCanPermissions, strict: boolean) {\n    let show = true;\n\n    for (const key in conditions) {\n      if ((strict && this._permissions[key] === undefined) || this._permissions[key] === conditions[key]) {\n        show = false;\n\n        break;\n      }\n    }\n\n    return show;\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { NgCanService } from '../services/ng-can.service';\nimport { INgCanPermissions } from '../ng-can.typings';\n\n@Directive({\n  selector: '[ng-can]'\n})\nexport class NgCanDirective implements OnInit {\n  @Input() conditions: INgCanPermissions = {};\n  @Input() permissions: INgCanPermissions = {};\n  @Input() strictMode: boolean;\n\n  constructor(protected el: ElementRef, protected ngCanService: NgCanService) {\n    this.hideElement();\n  }\n\n  ngOnInit(): void {\n    this.ngCanService.loadPermissions(this.permissions);\n    const needToShow = this.ngCanService.checkConditions(this.conditions, this.strictMode);\n\n    if (needToShow) {\n      this.showElement();\n    }\n  }\n\n  hideElement() {\n    this.el.nativeElement.style.visibility = 'hidden';\n  }\n\n  showElement() {\n    this.el.nativeElement.style.visibility = 'visible';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgCanDirective } from './directives/can.directive';\n\n@NgModule({\n  declarations: [\n    NgCanDirective\n  ],\n  imports: [],\n  exports: [\n    NgCanDirective\n  ]\n})\nexport class NgCanModule {\n}\n"],"names":[],"mappings":";;;;;;AAAA,MAMa,YAAY;IAGvB;QAFQ,iBAAY,GAAsB,EAAE,CAAC;KAG5C;;;;;IAED,eAAe,CAAC,WAAuC;QACrD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;KACjC;;;;;;IAED,eAAe,CAAC,UAA6B,EAAE,MAAe;;YACxD,IAAI,GAAG,IAAI;QAEf,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;YAC5B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,UAAU,CAAC,GAAG,CAAC,EAAE;gBAClG,IAAI,GAAG,KAAK,CAAC;gBAEb,MAAM;aACP;SACF;QAED,OAAO,IAAI,CAAC;KACb;;;YAzBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACLD,MAOa,cAAc;;;;;IAKzB,YAAsB,EAAc,EAAY,YAA0B;QAApD,OAAE,GAAF,EAAE,CAAY;QAAY,iBAAY,GAAZ,YAAY,CAAc;QAJjE,eAAU,GAAsB,EAAE,CAAC;QACnC,gBAAW,GAAsB,EAAE,CAAC;QAI3C,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;cAC9C,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;QAEtF,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;;;;IAED,WAAW;QACT,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;KACnD;;;;IAED,WAAW;QACT,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;KACpD;;;YA3BF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;aACrB;;;;YANmB,UAAU;YACrB,YAAY;;;yBAOlB,KAAK;0BACL,KAAK;yBACL,KAAK;;;;;;;ACVR,MAYa,WAAW;;;YATvB,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,cAAc;iBACf;gBACD,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE;oBACP,cAAc;iBACf;aACF;;;;;;;;;;;;;;;"}
