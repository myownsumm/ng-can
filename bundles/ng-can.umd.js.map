{"version":3,"file":"ng-can.umd.js.map","sources":["ng://ng-can/lib/services/ng-can.service.ts","ng://ng-can/lib/module.options.ts","ng://ng-can/lib/directives/can.directive.ts","ng://ng-can/lib/ng-can.module.ts"],"sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\nimport {\n  INgCanPermissions,\n  INgCanPermissionsCheckable,\n  INgCanHideApproachesControllable,\n  THideApproach\n} from '../ng-can.typings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCanService implements INgCanPermissionsCheckable, INgCanHideApproachesControllable {\n  private _permissions: INgCanPermissions = {};\n\n  constructor() {\n  }\n\n  loadPermissions(permissions: { [key: string]: boolean }): void {\n    this._permissions = permissions;\n  }\n\n  checkConditions(conditions: INgCanPermissions, strict?: boolean) {\n    let allowed = true;\n\n    for (const key in conditions) {\n      if (!conditions.hasOwnProperty(key)) {\n        continue;\n      }\n\n      if (this._permissions[key] === undefined) {\n        if (!strict) {\n          continue;\n        }\n\n        allowed = false;\n        break;\n      }\n\n      if (this._permissions[key] !== conditions[key]) {\n        allowed = false;\n\n        break;\n      }\n    }\n\n    return allowed;\n  }\n\n  hideElement(el: ElementRef, hideApproach: THideApproach): void {\n    switch (hideApproach) {\n      case 'visibility': {\n        el.nativeElement.style.visibility = 'hidden';\n\n        break;\n      }\n\n      case 'hidden': {\n        el.nativeElement.hidden = true;\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown Hide Approach ${hideApproach}`);\n    }\n  }\n\n  showElement(el: ElementRef, hideApproach: THideApproach): void {\n    switch (hideApproach) {\n      case 'visibility': {\n        el.nativeElement.style.visibility = 'visible';\n\n        break;\n      }\n\n      case 'hidden': {\n        el.nativeElement.hidden = false;\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown Hide Approach ${hideApproach}`);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { IModuleOptions } from './ng-can.typings';\n\nexport const MODULE_OPTIONS = new InjectionToken<IModuleOptions>('module.options');\n\n","import { Directive, ElementRef, Inject, Input, OnInit } from '@angular/core';\nimport { NgCanService } from '../services/ng-can.service';\nimport { IModuleOptions, INgCanPermissions, THideApproach } from '../ng-can.typings';\nimport { MODULE_OPTIONS } from '../module.options';\n\n@Directive({\n  selector: '[ng-can]'\n})\nexport class NgCanDirective implements OnInit {\n  @Input() conditions: INgCanPermissions = {};\n  @Input() permissions: INgCanPermissions = {};\n  @Input() strictMode: boolean;\n  @Input() hideApproach: THideApproach = this.options.hide_approach;\n\n  constructor(protected el: ElementRef, protected ngCanService: NgCanService,\n              @Inject(MODULE_OPTIONS) protected options: IModuleOptions) {\n  }\n\n  ngOnInit(): void {\n    this.hideElement();\n\n    this.ngCanService.loadPermissions(this.permissions);\n    const needToShow = this.ngCanService.checkConditions(this.conditions, this.strictMode);\n\n    if (needToShow) {\n      this.showElement();\n    }\n  }\n\n  hideElement() {\n    this.ngCanService.hideElement(this.el, this.hideApproach);\n  }\n\n  showElement() {\n    this.ngCanService.showElement(this.el, this.hideApproach);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgCanDirective } from './directives/can.directive';\nimport { IModuleOptions } from './ng-can.typings';\nimport { MODULE_OPTIONS } from './module.options';\n\n@NgModule({\n  declarations: [\n    NgCanDirective\n  ],\n  imports: [],\n  exports: [\n    NgCanDirective\n  ]\n})\nexport class NgCanModule {\n  static forChild(options: IModuleOptions): ModuleWithProviders {\n    return {\n      ngModule: NgCanModule,\n      providers: [\n        {\n          provide: MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"],"names":["Injectable","InjectionToken","Directive","ElementRef","Inject","Input","NgModule"],"mappings":"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"}
